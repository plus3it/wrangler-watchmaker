name: Validate, deploy, and release

on:
  # Run on demand
  workflow_dispatch:

  # Run pull requests against the default branch
  pull_request:
    branches: [master]

  # Run on push to default branch
  push:
    branches: [master]

  # Run when a release is created
  release:
    types: [released]

concurrency:
  group: deploy-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      TARGET_ENVIRONMENT: "${{ github.event_name != 'release' && 'dev' || 'release' }}"
      TF_VAR_bucket_name: "${{ github.event_name != 'release' && vars.DEV_BUCKET || vars.RELEASE_BUCKET }}"
      TF_VAR_repo_endpoint: "${{ github.event_name != 'release' && vars.DEV_REPO || vars.RELEASE_REPO }}"
      WRANGLER_BUCKET: "${{ vars.WRANGLER_BUCKET }}"
      WRANGLER_DDB_TABLE: "${{ vars.WRANGLER_DDB_TABLE }}"
      WRANGLER_DISTRIBUTION: "${{ github.event_name != 'release' && vars.DEV_DISTRIBUTION || vars.RELEASE_DISTRIBUTION }}"
    permissions:
      id-token: write
    steps:
      - name: Clone this git repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install Python requirements
        run: python -m pip install -r requirements.txt

      - name: Install Pipenv packages
        run: pipenv install

      - name: Initialize tooling
        run: make init

      - name: Install tooling
        run: make rclone/install terraform/install terragrunt/install

      - name: Install aws-cli
        uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a
        with:
          role-to-assume: "${{ github.event_name != 'pull_request' && secrets.AWS_ROLE_ARN || vars.AWS_ROLE_ARN }}"
          aws-region: "${{ env.AWS_DEFAULT_REGION }}"

      - name: Validate credential
        run: aws sts get-caller-identity

      - name: Generate plan in pull request
        if: github.event_name == 'pull_request'
        run: make plan/dev

      - name: Deploy to target environment
        if: github.event_name != 'pull_request'
        env:
          DEV_BUCKET: "${{ vars.DEV_BUCKET }}"
          TF_INPUT: "0"
          TF_CLI_ARGS_apply: "-auto-approve"
        run: make deploy/${{ env.TARGET_ENVIRONMENT}}

      - name: Generate plan for release
        if: github.event_name != 'release' && github.event_name != 'pull_request'
        env:
          DEV_BUCKET: "${{ vars.DEV_BUCKET }}"
          TF_VAR_bucket_name: "${{ vars.RELEASE_BUCKET }}"
          TF_VAR_repo_endpoint: "${{ vars.RELEASE_REPO }}"
        run: make plan/release

  # Run the deploy job first, then create release on push to master or on-demand workflow dispatch
  release:
    needs:
      - deploy
    if: github.event_name != 'release' && github.event_name != 'pull_request'
    uses: plus3it/actions-workflows/.github/workflows/release.yml@3b8e48de2da8233d170c1d094932a562d9a36990
    secrets:
      release-token: "${{ secrets.GH_RELEASES_TOKEN }}"
    with:
      mockstacktest-enable: false
